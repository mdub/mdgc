---
import { getCollection } from 'astro:content';
import Layout from '~/layouts/Layout.astro';
import Prose from '~/components/Prose.astro';
import Panel from '~/components/Panel.astro';

export async function getStaticPaths() {
  const courses = await getCollection('courses');
  return courses.map((course) => ({
    params: { slug: course.slug },
    props: { course },
  }));
}

const { course } = Astro.props;
const { Content } = await course.render();

// Parse location coordinates if available
let lat, lng;
if (course.data.location) {
  try {
    const parsed = JSON.parse(course.data.location);
    if (parsed.type === 'Point' && parsed.coordinates) {
      lng = parsed.coordinates[0];
      lat = parsed.coordinates[1];
    }
  } catch (e) {
    // Ignore parse errors
  }
}

// Generate map links with course name label
const mapLinks = lat && lng ? {
  openstreetmap: `https://www.openstreetmap.org/?mlat=${lat}&mlon=${lng}&zoom=16#map=16/${lat}/${lng}`,
  google: course.data.googleMapsUrl || `https://www.google.com/maps/search/?api=1&query=${lat},${lng}`,
  apple: `https://maps.apple.com/?q=${encodeURIComponent(course.data.title)}&ll=${lat},${lng}`
} : null;
---

<Layout title={course.data.title} subtitle={course.data.suburb}>
  {course.data.mainImage && (
    <img
      src={course.data.mainImage}
      alt={course.data.title}
      class="w-full my-8 rounded-lg aspect-[2/1] object-cover"
    />
  )}

  <Prose>
    <Content />
  </Prose>

  {(course.data.address || mapLinks) && (
    <Prose>
      <h2>Location</h2>
      {course.data.address && <p>{course.data.address}</p>}
      {course.data.suburb && <p><strong><em>{course.data.suburb}</em></strong></p>}
      {mapLinks && (
        <p>
          View in:
          <a href={mapLinks.google} target="_blank" rel="noopener noreferrer">Google Maps</a>
          {' · '}
          <a href={mapLinks.apple} target="_blank" rel="noopener noreferrer">Apple Maps</a>
          {' · '}
          <a href={mapLinks.openstreetmap} target="_blank" rel="noopener noreferrer">OpenStreetMap</a>
        </p>
      )}
    </Prose>
  )}

  {course.data.courseMap && (
    <Prose>
      <h2>Course map</h2>
      <a href={course.data.courseMap}>
        <img
          src={course.data.courseMap}
          alt={`${course.data.title} course map`}
          class="w-full rounded-lg cursor-pointer hover:opacity-90 transition-opacity"
        />
      </a>
    </Prose>
  )}
</Layout>
