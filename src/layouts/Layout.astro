---
import '~/styles/global.css'
import logoImage from '~/assets/images/mdgc-logo.png';
import { getNavItems, type NavItem } from '~/data/navigation.ts';
import { Icon } from 'astro-icon/components'

export interface Props {
  title: string;
  subtitle?: string;
}

const { title, subtitle } = Astro.props;

// Check if current page is under a nav item
function isActiveNavItem(itemHref: string, currentPath: string): boolean {
  if (itemHref === '/' && currentPath === '/') return true;
  if (itemHref !== '/' && currentPath.startsWith(itemHref)) return true;
  return false;
}

const currentPath = Astro.url.pathname;

// Get navigation items dynamically
const navItems: NavItem[] = await getNavItems();

// Transform navigation data for footer - show all nav items
const footerSections = navItems;

// Favicon sizes to generate links for
const faviconSizes = [16, 32, 48, 192];
---

<!doctype html>
<html lang="en">
	<head>
		<title>{title} | Melbourne Disc Golf Club</title>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		{faviconSizes.map(size => (
			<link rel="icon" type="image/png" sizes={`${size}x${size}`} href={`/images/favicon-${size}x${size}.png`} />
		))}
	</head>
	<body>
		<header>
			<div id="menu-strip" class="bg-gradient-to-b from-mdgc-blue-dark to-slate-900 text-white shadow-lg">
				<div id="menu-content" class="extra-width flex items-center h-16 space-x-8">
					<div id="menu-logo">
						<a href="/" class="flex items-end relative z-10 lg:translate-y-8 xl:translate-y-9">
							<img src={logoImage.src} alt="Melbourne Disc Golf Club" class="h-12 lg:h-16 xl:h-20 w-auto" />
						</a>
					</div>

					<div id="menu-links" class="ml-auto">
						<nav class="hidden md:flex items-center space-x-8">
							{navItems.map(item => (
								item.subPages ? (
									<div class="relative group">
										<div class="flex items-center">
											<a href={item.href} class={`${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{item.title}</a>
											<button class={`ml-1 ${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>
												<Icon name="heroicons:chevron-down" class="h-4 w-4" />
											</button>
										</div>
										<div class="absolute -left-4 mt-0 w-56 bg-slate-800 text-mdgc-blue-light rounded-md shadow-xl hidden group-hover:block z-10 pt-2">
											{item.subPages.map(subItem => (
												<a href={subItem.href} class={`block px-4 py-2 hover:bg-mdgc-blue-dark hover:text-white transition-colors ${isActiveNavItem(subItem.href, currentPath) ? 'text-white' : ''}`}>{subItem.title}</a>
											))}
										</div>
									</div>
								) : (
									<a href={item.href} class={`${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{item.title}</a>
								)
							))}
						</nav>
					</div>

					<!-- Mobile menu button -->
					<div class="md:hidden ml-auto">
						<button id="mobile-menu-button" class="text-mdgc-blue-light hover:text-white">
							<Icon name="heroicons:bars-3" class="h-6 w-6" />
						</button>
					</div>
				</div>

				<!-- Mobile menu -->
				<div id="mobile-menu" class="md:hidden hidden">
					<nav class="px-2 pt-2 pb-3 space-y-1">
						{navItems.map(item => (
							item.subPages ? (
								<div>
									<a href={item.href} class={`block px-3 py-2 hover:bg-mdgc-blue-dark rounded-md font-semibold ${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{item.title}</a>
									{item.subPages.map(subItem => (
										<a href={subItem.href} class={`block px-6 py-1 text-sm hover:bg-mdgc-blue-dark rounded-md ${isActiveNavItem(subItem.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{subItem.title}</a>
									))}
								</div>
							) : (
								<a href={item.href} class={`block px-3 py-2 hover:bg-mdgc-blue-dark rounded-md ${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{item.title}</a>
							)
						))}
					</nav>
				</div>
			</div>

			<div class="bg-mdgc-blue-dark text-white">
				<div id="title-content" class="content-width py-8 pt-6">
					<div id="title-and-subtitle">
						<h1 class="text-4xl font-bold">{title}</h1>
						{subtitle && <p class="text-xl mt-4">{subtitle}</p>}
					</div>
				</div>
			</div>
		</header>

		<main class="content-width">
			<slot />
		</main>

		<div class="bg-gray-900 text-white">
			<footer class="extra-width sm:px-6 lg:px-8 py-12">
				<div class="grid grid-cols-1 lg:[grid-template-columns:repeat(auto-fit,minmax(0,1fr))] gap-4">
					<div>
						<img src={logoImage.src} alt="Melbourne Disc Golf Club" class="h-16 w-auto" />
					</div>

					<!-- Navigation sections -->
					{footerSections.map(section => (
						<div>
							<h3 class="font-semibold mb-2">
								<a href={section.href} class={`${isActiveNavItem(section.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>
									{section.title}
								</a>
							</h3>
							{section.subPages && (
								<ul class="space-y-1">
									{section.subPages.map(link => (
										<li>
											<a href={link.href} class={`block text-sm ${isActiveNavItem(link.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>
												{link.title}
											</a>
										</li>
									))}
								</ul>
							)}
						</div>
					))}
				</div>

				<!-- Bottom section -->
				<div class="border-t border-gray-700 mt-8 pt-2 flex flex-col md:flex-row justify-between items-center">
					<p class="text-gray-400 text-sm">
						Â© {new Date().getFullYear()} Melbourne Disc Golf Club. All rights reserved.
					</p>
				</div>
			</footer>
		</div>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>

<script>
	const mobileMenuButton = document.getElementById('mobile-menu-button');
	const mobileMenu = document.getElementById('mobile-menu');

	mobileMenuButton?.addEventListener('click', () => {
		mobileMenu?.classList.toggle('hidden');
	});
</script>
