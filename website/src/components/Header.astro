---
import logoImage from '../assets/images/mdgc-logo.png';
import { navItems } from '../data/navigation.js';

export interface Props {
  title: string;
  subtitle?: string;
}

const { title, subtitle } = Astro.props;

// Check if current page is under a nav item
function isActiveNavItem(itemHref: string, currentPath: string): boolean {
  if (itemHref === '/' && currentPath === '/') return true;
  if (itemHref !== '/' && currentPath.startsWith(itemHref)) return true;
  return false;
}

const currentPath = Astro.url.pathname;
---

<header>
  <nav class="bg-gradient-to-b from-mdgc-blue-dark to-slate-900 text-white shadow-lg">
    <div id="nav-container" class="max-w-7xl mx-auto px-4 md:px-8 flex items-center h-16 space-x-8">
      <a href="/" class="flex items-end relative z-10 md:translate-y-6">
        <img src={logoImage.src} alt="Melbourne Disc Golf Club" class="h-12 w-auto md:h-20" />
      </a>

      <div id="nav-links" class="hidden md:flex items-center space-x-8 ml-auto">
          {navItems.map(item => (
            item.subPages ? (
              <div class="relative group">
                <div class="flex items-center">
                  <a href={item.href} class={`${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{item.title}</a>
                  <button class={`ml-1 ${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                </div>
                <div class="absolute left-0 mt-2 w-56 bg-white text-gray-800 rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all z-10">
                  {item.subPages.map(subItem => (
                    <a href={subItem.href} class="block px-4 py-2 hover:bg-gray-100">{subItem.title}</a>
                  ))}
                </div>
              </div>
            ) : (
              <a href={item.href} class={`${isActiveNavItem(item.href, currentPath) ? 'text-white' : 'text-mdgc-blue-light'} hover:text-white transition-colors`}>{item.title}</a>
            )
          ))}
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden ml-auto">
        <button id="mobile-menu-button" class="text-mdgc-blue-light hover:text-white">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1">
        {navItems.map(item => (
          item.subPages ? (
            <div>
              <a href={item.href} class={`block px-3 py-2 hover:bg-mdgc-blue-dark rounded-md font-semibold ${isActiveNavItem(item.href, currentPath) ? 'text-white' : ''}`}>{item.title}</a>
              {item.subPages.map(subItem => (
                <a href={subItem.href} class="block px-6 py-1 text-sm hover:bg-mdgc-blue-dark rounded-md text-mdgc-blue-light">{subItem.title}</a>
              ))}
            </div>
          ) : (
            <a href={item.href} class={`block px-3 py-2 hover:bg-mdgc-blue-dark rounded-md ${isActiveNavItem(item.href, currentPath) ? 'text-white' : ''}`}>{item.title}</a>
          )
        ))}
      </div>
    </div>
  </nav>

</header>

<section class="bg-gradient-to-b from-mdgc-blue to-mdgc-blue-dark text-white">
  <div id="title-container" class="max-w-7xl mx-auto px-4 py-8 pt-6 md:px-36">
    <div id="title-and-subtitle">
      <h1 class="text-4xl font-bold">{title}</h1>
      {subtitle && <p class="text-xl mt-4">{subtitle}</p>}
    </div>
  </div>
</section>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
</script>