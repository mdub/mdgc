---
import logoImage from '/src/assets/images/mdgc-logo.png';

export interface Props {
  title: string;
  subtitle?: string;
}

const { title, subtitle } = Astro.props;

// Generate breadcrumb navigation based on current URL
function generateBreadcrumbs(url: URL) {
  const pathname = url.pathname;
  const segments = pathname.split('/').filter(segment => segment !== '');

  // Don't show breadcrumbs on homepage or single-level pages
  if (segments.length <= 1) {
    return [];
  }

  const breadcrumbs = [];

  let currentPath = '';
  segments.forEach((segment, index) => {
    currentPath += `/${segment}`;

    // Skip the last segment (current page)
    if (index === segments.length - 1) {
      return;
    }

    // Map URL segments to readable titles
    let title = segment.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase());

    // Special cases for better titles
    if (segment === 'disc-golf') title = 'Disc Golf';
    if (segment === 'mdgc') title = 'MDGC';
    if (segment === 'club' && index === 0) title = 'Club';
    if (segment === 'courses' && index === 0) title = 'Courses';
    if (segment === 'events' && index === 0) title = 'Events';

    breadcrumbs.push({ title, href: currentPath });
  });

  return breadcrumbs;
}

const breadcrumbs = generateBreadcrumbs(Astro.url);

const navItems = [
  {
    title: 'Disc Golf',
    href: '/disc-golf'
  },
  {
    title: 'Courses',
    href: '/courses',
    dropdown: [
      { title: 'Ruffey Lake Park', href: '/courses/ruffey-lake-park' },
      { title: 'Bicentennial Park', href: '/courses/bicentennial-park' },
      { title: 'Bald Hill Park', href: '/courses/bald-hill-park' },
      { title: 'Stony Creek Reserve', href: '/courses/stony-creek' },
      { title: 'Little Blind Creek', href: '/courses/little-blind-creek' },
      { title: 'Llewellyn Park', href: '/courses/llewellyn-park' },
      { title: 'Caulfield Racecourse', href: '/courses/caulfield-racecourse' },
      { title: 'Livingstone Primary', href: '/courses/livingstone-primary' },
      { title: 'Upper Yarra SC', href: '/courses/upper-yarra-sc' },
      { title: 'Heathdale Glen Orden', href: '/courses/heathdale-glen-orden' }
    ]
  },
  {
    title: 'Club',
    href: '/club',
    dropdown: [
      { title: 'About MDGC', href: '/club' },
      { title: 'Membership', href: '/club/membership' },
      { title: 'Contact Us', href: '/club/contact' },
      { title: 'MDGC Board', href: '/club/board' }
    ]
  },
  {
    title: 'Events',
    href: '/events'
  },
  {
    title: 'Shop',
    href: '/shop'
  }
];
---

<header>
  <nav class="bg-mdgc-blue-dark text-white shadow-lg">
    <div id="nav-container" class="max-w-7xl mx-auto px-4 md:px-8 flex items-center h-16 space-x-8">
      <a href="/" class="flex items-end relative z-10 md:translate-y-6">
        <img src={logoImage.src} alt="Melbourne Disc Golf Club" class="h-12 w-auto md:h-20" />
      </a>

      <div id="nav-links" class="hidden md:flex items-center space-x-8">
          {navItems.map(item => (
            item.dropdown ? (
              <div class="relative group">
                <div class="flex items-center">
                  <a href={item.href} class="text-mdgc-blue-light hover:text-white transition-colors">{item.title}</a>
                  <button class="ml-1 text-mdgc-blue-light hover:text-white transition-colors">
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                </div>
                <div class="absolute left-0 mt-2 w-56 bg-white text-gray-800 rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all z-10">
                  {item.dropdown.map(subItem => (
                    <a href={subItem.href} class="block px-4 py-2 hover:bg-gray-100">{subItem.title}</a>
                  ))}
                </div>
              </div>
            ) : (
              <a href={item.href} class="text-mdgc-blue-light hover:text-white transition-colors">{item.title}</a>
            )
          ))}
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden ml-auto">
        <button id="mobile-menu-button" class="text-mdgc-blue-light hover:text-white">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1">
        {navItems.map(item => (
          item.dropdown ? (
            <div>
              <a href={item.href} class="block px-3 py-2 hover:bg-mdgc-blue-dark rounded-md font-semibold">{item.title}</a>
              {item.dropdown.map(subItem => (
                <a href={subItem.href} class="block px-6 py-1 text-sm hover:bg-mdgc-blue-dark rounded-md text-mdgc-blue-light">{subItem.title}</a>
              ))}
            </div>
          ) : (
            <a href={item.href} class="block px-3 py-2 hover:bg-mdgc-blue-dark rounded-md">{item.title}</a>
          )
        ))}
      </div>
    </div>
  </nav>

</header>

<section class="bg-gradient-to-b from-mdgc-blue to-mdgc-blue-dark text-white">
  <div id="title-container" class="max-w-7xl mx-auto px-4 py-8 pt-6 md:px-36">
    <!-- Breadcrumb Navigation -->
    {breadcrumbs.length > 0 && (
      <nav class="mb-4" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm text-mdgc-blue-light">
          {breadcrumbs.map((crumb, index) => (
            <li class="flex items-center">
              {index > 0 && (
                <svg class="h-4 w-4 mx-2 text-mdgc-blue-light" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                </svg>
              )}
              <a href={crumb.href} class="hover:text-white transition-colors">{crumb.title}</a>
            </li>
          ))}
        </ol>
      </nav>
    )}

    <div id="title-and-subtitle">
      <h1 class="text-4xl font-bold">{title}</h1>
      {subtitle && <p class="text-xl mt-4">{subtitle}</p>}
    </div>
  </div>
</section>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
</script>